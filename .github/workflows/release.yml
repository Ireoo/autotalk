name: Release Build

on:
  push:
    branches:
      - master  # 当推送到 master 分支时触发

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set up MSVC (Windows)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git cmake

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake

    - name: Install CMake (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'

    - name: Build Project
      run: |
        bash build.sh

    - name: Package files
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          cd Release
          zip -r ../autotalk-windows.zip .
          cd ..
        elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          cd Release
          tar -czvf ../autotalk-linux.tar.gz .
          cd ..
        else
          cd Release
          tar -czvf ../autotalk-macos.tar.gz .
          cd ..
        fi

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        files: |
          autotalk-windows.zip
          autotalk-linux.tar.gz
          autotalk-macos.tar.gz
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}